# NOTE refCols refer to columns in the reference tables
# NOTE refCols specify allowed keys in data ids used to look up calibrations
# Some limited documentation can be found here: https://pipelines.lsst.io/v/foo/_modules/lsst/obs/base/mapping.html


needCalibRegistry: true
camera: ../camera
defaultLevel: Ccd

# The default policy file is contained within the obs_base/policy directory of the stack. However, specific entried can be overridden by including them in here (and, indeed, some are mandatory as they don't have equivalents in the default files).
# Even if it were possible and you **only** used the defaults in the obs_base/policy files you still need to include exposures, calibrations, and datasets so that it knows to refer to the defaults in obs_base.
exposures:
  raw:
    python: lsst.afw.image.DecoratedImageU
    persistable: DecoratedImageU
    template: 'raw/%(dateObs)s/%(dataType)s/%(ccd)s/%(visit)04d-%(filter)s-%(expTime).2f.fits'
  calexp:
    template: 'calexp/calexp/%(visit)07d/calexp-%(visit)07d_%(ccd)02d-%(filter)s.fits'
  postISRCCD:
    template: 'postISR/postISR/%(visit)07d/postISR-%(visit)07d_%(ccd)02d-%(filter)s.fits'
  # deepCoadd_directWarps are warped calexps made by makeCoaddTempEx.py
  deepCoadd_directWarp:
    template: deepCoadd/%(filter)s/%(tract)d/%(patch)stempExp/v%(visit)d-f%(filter)s.fits

datasets:
  processCcd_metadata:
    template: 'processCcd_md/%(dateObs)s/processCcd_md-%(visit)04d-%(filter)s-%(ccd)02d.boost'
  icSrc:
    template: 'sci-results/icSrc/%(dateObs)s/icSrc-%(visit)04d-%(filter)s-%(ccd)02d.fits'
  src:
    template: 'sci-results/src/%(dateObs)s/src-%(visit)04d-%(filter)s-%(ccd)02d.fits'
  calexpBackground:
    template: 'calexp/bkgd/%(visit)07d/calexp-%(visit)07d_%(ccd)02d-%(filter)s.fits'
  # srcMatch is the catalogue of sources that matched with the reference catalogue
  # srcMatch is produced during image calibration
  srcMatch:
    persistable: BaseCatalog
    python: lsst.afw.table.BaseCatalog
    storage: FitsCatalogStorage
    tables: raw
    template: refmatch/srcMatch/%(dateObs)s/srcMatch-%(visit)04d-%(filter)s-%(ccd)02d.fits

calibrations:
  bias:
    level: Ccd
    tables: bias
    filter: false
    validRange: true
    obsTimeName: dateObs
    persistable: DecoratedImageF
    python: lsst.afw.image.DecoratedImageF
    template: calib/bias/%(calibDate)s/%(ccd)02d/%(expTime).2f.fits
    columns:
      - ccd
      - expTime
    reference: raw
    refCols:
      - ccd
      - dateObs
      - expTime
  flat:
    level: Ccd
    tables: flat
    filter: true
    columns:
      - ccd
      - filter
    reference: raw
    refCols:
      - ccd
      - dateObs
      - filter
    obsTimeName: dateObs
    persistable: DecoratedImageF
    python: lsst.afw.image.DecoratedImageF
    template: calib/flat/%(calibDate)s/%(ccd)02d/%(filter)s.fits
    validRange: true

  # The below are not currently used. Can they be removed?
  dark:
    level: Ccd
    tables: dark
    filter: false
    columns:
      - ccd
      - dateObs
    reference: raw
    refCols:
      - ccd
      - dateObs
      - expTime
    obsTimeName: dateObs
    persistable: DecoratedImageF
    python: lsst.afw.image.DecoratedImageF
    template: calib/dark/dark-%(ccd)02d-%(dateObs)s.fits
    validRange: true
  defects:
    level: Ccd
    persistable: DecoratedImageF
    python: lsst.afw.image.DecoratedImageF
    template: calib/defects/defects-%(ccd)02d-(calibDate)s.fits
